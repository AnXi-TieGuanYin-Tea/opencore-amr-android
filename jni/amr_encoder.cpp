/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <android/log.h>
#include <interf_enc.h>
#include <string.h>

#ifndef _Included_com_hikvh_media_amr_AmrEncoder
#define _Included_com_hikvh_media_amr_AmrEncoder

struct encoder_state *state;
int initialized;

#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT void JNICALL Java_com_hikvh_media_amr_AmrEncoder_init
  (JNIEnv *, jclass, jint dtx) {
    if(initialized ++ != 0){
        return;
    }

    state = (encoder_state* )Encoder_Interface_init(dtx);
}

JNIEXPORT void JNICALL Java_com_hikvh_media_amr_AmrEncoder_exit
  (JNIEnv *, jclass) {
    if(!initialized){
        return;
    }
    initialized = 0;
    Encoder_Interface_exit(state);
}

JNIEXPORT void JNICALL Java_com_hikvh_media_amr_AmrEncoder_reset
  (JNIEnv *, jclass) {
    if(!initialized){
        return;
    }
    Encoder_Interface_reset(state);
}

JNIEXPORT jint JNICALL Java_com_hikvh_media_amr_AmrEncoder_encode
   (JNIEnv *env, jclass, jint mode, jshortArray in, jbyteArray out) {
    if(!initialized){
        return 0;
    }

    jsize inLen = env->GetArrayLength(in);
    jshort inBuf[inLen];
    env->GetShortArrayRegion(in, 0, inLen, inBuf);

    jsize outLen = env->GetArrayLength(out);
    jbyte outBuf[outLen];
    int encodeLength;

    encodeLength = Encoder_Interface_Encode(state, (Mode)mode, (const short*) inBuf,
            (unsigned char*) outBuf);

    env->SetByteArrayRegion(out, 0, outLen, outBuf);
    return encodeLength;
}
 
#ifdef __cplusplus
}
#endif
#endif